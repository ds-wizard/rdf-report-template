{#- ------------------------------------------------------------------------------------ -#}
{#-  GENERAL MACROS                                                                      -#}
{#- ------------------------------------------------------------------------------------ -#}

{%- macro makeList(list, strBefore, strAfter) -%}
  {%- set resultList = [] -%}
    {%- for item in list -%}
    {%- do resultList.append(strBefore+item+strAfter) -%}
    {%- endfor -%}
    {{resultList|join(", ") }}
{%- endmacro -%}

{#- ------------------------------------------------------------------------------------ -#}
{#-  QUESTIONNAIRE VERSION MACRO                                                         -#}
{#- ------------------------------------------------------------------------------------ -#}

{%- macro renderQuestionnaireVersion(version, index) -%}
questionnaireVersion:{{version.uuid}} a dsw:QuestionnaireVersion ;
  dsw:uuid "{{version.uuid}}" ;
  dsw:eventUuid "{{version.eventUuid}}" ;
  {%- if version.name -%}
  dsw:title {{version.name|tojson}} ;
  {%- endif -%}
  {%- if version.description %}
  dsw:description {{version.description|tojson}} ;
  {%- endif %}
  {%- if version.createdBy.uuid %}
  dsw:isCreatedBy user:{{version.createdBy.uuid}} ;
  {%- endif %}
  dsw:createdAt "{{version.createdAt}}"^^xsd:dateTime ;
  dsw:updatedAt "{{version.updatedAt}}"^^xsd:dateTime .
{%- endmacro -%}

{# ------------------------------------------------------------------------------------ #}
{#  REPLY MACROS                                                                        #}
{# ------------------------------------------------------------------------------------ #}

{%- macro renderReply(replyPath, reply) -%}
  dsw:createdAt "{{reply.createdAt}}"^^xsd:dateTime ;
  {%- if reply.createdBy.uuid %}
  dsw:isCreatedBy user:{{reply.createdBy.uuid}} ;
  {%- do simpleAuthors.update({ reply.createdBy.uuid : reply.createdBy}) -%}
  {%- endif -%}
 {%- set listOfUuids = replyPath.split('.') %}
  dsw:isReplyTo km:{{listOfUuids|last}} ;
{%- endmacro -%}

{%- macro renderStringReply(replyPath, reply, index) %}

reply:{{replyPath}} a dsw:ValueReply ;
  dsw:path "{{replyPath}}" ;
  {{ renderReply(replyPath, reply) }}
  {%- set listOfUuids = replyPath.split('.') %}
  {%- set questionUuid = listOfUuids|last -%}
  {%- set type = ctx.knowledgeModel.entities.questions[questionUuid].valueType -%} 

  {%- if type == "UrlQuestionValueType" %}
  dsw:urlReplyValue <{{reply.value.value}}> ;

  {%- elif type == "StringQuestionValueType" or type == "TextQuestionValueType" or type == "EmailQuestionValueType" or type == "ColorQuestionValueType" %}
  {%- if reply.value.value %}
  dsw:replyValue {{reply.value.value|tojson}} .
  {%- endif -%}

  {%- elif type == "NumberQuestionValueType" %}
  dsw:numberReplyValue  "{{reply.value.value}}"^^xsd:float .

  {%- elif type == "DateQuestionValueType" %}
  dsw:dateReplyValue  "{{reply.value.value}}"^^xsd:date .

  {%- elif type == "DateTimeQuestionValueType" %}
  dsw:dateTimeReplyValue  "{{reply.value.value}}"^^xsd:dateTime .

  {%- elif type == "TimeQuestionValueType" %}
  dsw:timeReplyValue  "{{reply.value.value}}"^^xsd:time .
  {%- endif %} .
{%- endmacro -%}

{%- macro renderItemListReply(replyPath, reply, index) %}

reply:{{replyPath}} a dsw:ItemListReply ;
  dsw:path "{{replyPath}}" ;
  {{ renderReply(replyPath, reply) }}

  {%- set replies = makeList(reply.value.value, '"', '"') -%}
  {%- if replies|length > 0 %}
  dsw:replyValue {{ replies.split(',')|join(", ")}} .
  
  {%- endif -%}

{%- endmacro -%}

{%- macro renderIntegrationReply(replyPath, reply, index) -%}
{%- if reply.value.value.type == "IntegrationType" and reply.value.value.id -%}
    {%- set listOfUuids = replyPath.split('.') -%}
    {%- set questionId = listOfUuids|last -%}
    {%- set integrationId = ctx.knowledgeModel.entities.questions[questionId].integrationUuid -%}
    {%- set integration = ctx.knowledgeModel.entities.integrations[integrationId] %}

reply:{{replyPath}} a dsw:IntegrationTypeIntegrationReply ;
  dsw:path "{{replyPath}}" ;
  dsw:integrationReplyValue "{{integration.itemUrl | replace("${id}", reply.value.value.id )}}"^^schema:URL ;
  dsw:integrationReplyItem "{{reply.value.value.id}}" ;
{%- else %}

reply:{{replyPath}} a dsw:PlainTypeIntegrationReply ;
  dsw:path "{{replyPath}}" ;
{%- endif %}
  {{ renderReply(replyPath, reply) }}
  {%- if reply.value.value.value %}
  dsw:replyValue {{reply.value.value.value|tojson}}
  {%- endif -%}
  .
{%- endmacro -%}

{%- macro renderMultiChoiceReply(replyPath, reply, index) %}

reply:{{replyPath}} a dsw:MultiChoiceReply ;
  dsw:path "{{replyPath}}" ;
  {{ renderReply(replyPath, reply) }}
  
  {%- set choicesUuidPrefix = makeList(reply.value.value, "km:", "") -%}
  {%- set choicesUuid = makeList(reply.value.value, '"', '"') -%}
  {%- if choicesUuidPrefix|length > 0 %}
  dsw:multiChoiceReplyValue {{ choicesUuidPrefix.split(',')|join(", ")}} ;
  dsw:replyValue {{choicesUuid.split(',')|join(", ")}} .

  {%- endif-%}
{%- endmacro -%}

{%- macro renderAnswerReply(replyPath, reply, index) %}

reply:{{replyPath}} a dsw:AnswerReply ;
  {{ renderReply(replyPath, reply) }}
  {%- if reply.value.value %}
  dsw:replyValue "{{reply.value.value}}" ;
  dsw:answerReplyValue km:{{reply.value.value}} ;
  {%- endif %}
  dsw:path "{{replyPath}}" .
{%- endmacro -%}

{#- ------------------------------------------------------------------------------------ -#}
{#-  QUESTIONNAIRE                                                                       -#}
{#- ------------------------------------------------------------------------------------ -#}

questionnaire:{{ctx.questionnaire.uuid}} a dsw:Questionnaire ;
  dsw:uuid "{{ctx.questionnaire.uuid}}" ;
  {%- if ctx.questionnaire.name %}
  dsw:title {{ctx.questionnaire.name|tojson}} ;
  {%- endif -%}
  {%- if ctx.questionnaire.description %}
  dsw:description {{ctx.questionnaire.description|tojson}} ;
  {%- endif -%}
  {%- set projectTags = makeList(ctx.questionnaire.projectTags, '"','"') -%}
  {%- if projectTags|length > 0 %}
  dsw:hasProjectTag {{ projectTags.split(',')|join(", ")}} ;
  {%- endif %}
  dsw:hasCurrentVersion questionnaireVersion:{{ctx.questionnaireVersion}} ;

  {%- if ctx.questionnaireVersions|length > 0 -%}
  {%- set versions = [] -%}
  {%- for version in ctx.questionnaire.versions -%}
  {%- do versions.append("questionnaireVersion:"+version.uuid) -%}
  {%- endfor %}
  dsw:hasVersion {{versions|join(", ")}} ;
  {%- endif %}
  dsw:hasPhase km:{{ctx.questionnaire.phaseUuid}} ;
  dsw:hasDocument document:{{ctx.document.uuid}} ;
  {%- if ctx.questionnaire.createdBy.uuid %}
  dsw:isCreatedBy user:{{ctx.questionnaire.createdBy.uuid}} ;
  {%- endif %}
  dsw:usesKnowledgeModel km:{{ ctx.knowledgeModel.uuid }} .

{#- ------------------------------------------------------------------------------------ -#}
{#-  QUESTIONNAIRE VERSION                                                               -#}
{#- ------------------------------------------------------------------------------------ #}

{%- if ctx.questionnaire.versions|length > 0 %}
  {%- for version in ctx.questionnaireVersions %}
  
{{ renderQuestionnaireVersion(version, loop.index) }}
  {%- endfor -%}
  {%- endif -%}

{#- ------------------------------------------------------------------------------------ -#}
{#-  REPLY                                                                               -#}
{#- ------------------------------------------------------------------------------------ -#}

{%- set simpleAuthors = {} -%}

{%- for replyPath in ctx.questionnaire.replies -%}
  
  {%- set reply = ctx.questionnaire.replies[replyPath] -%}
  {%- if reply.value.type == "StringReply" -%}

  {{renderStringReply(replyPath, reply, loop.index)}}

  {%- elif reply.value.type == "ItemListReply" -%}

  {{renderItemListReply(replyPath, reply, loop.index)}}

  {%- elif reply.value.type == "IntegrationReply" -%}

  {{renderIntegrationReply(replyPath, reply, loop.index)}}

  {%- elif reply.value.type == "MultiChoiceReply" -%}

  {{renderMultiChoiceReply(replyPath, reply,loop.index)}}

  {%- elif reply.value.type == "AnswerReply" -%}

  {{renderAnswerReply(replyPath, reply, loop.index)}}

  {%- endif %}
{%- endfor %}

{#- ------------------------------------------------------------------------------------ -#}
{#-  USER                                                                                -#}
{#- ------------------------------------------------------------------------------------ -#}

{%- if ctx.users|length > 0 %}
{%- for userItem in ctx.users %}
  {%- set user = userItem.user %}

user:{{user.uuid}} a dsw:user ;
  dsw:uuid "{{user.uuid}}" ;
  {%- if user.firstName and user.lastName %}
  dsw:firstName {{user.firstName|tojson}} ;
  dsw:lastName {{user.lastName|tojson}} ;
  {%- endif -%}
  {%- if user.imageUrl %}
  dsw:imageUrl "{{user.imageurl}}" ;
  {%- endif %}
  {%-if user.email and user.role %}
  dsw:email {{user.email|tojson}};
  dsw:role {{user.role|tojson}} ;
  {%- endif -%}
  
  {%- if user.affiliation %}
  dsw:affiliation {{user.affiliation}} ;
  {%- endif -%}

  {%- set permissions = makeList(userItem.perms, '"', '"') -%}
  {%- if permissions|length > 0 %}
  dsw:permission {{permissions.split(',')|join(", ")}} ;
  {%- endif -%}
  
  {%- set sources = makeList(user.sources, '"', '"') -%}
  {%- if sources|length > 0 %}
  dsw:source {{ sources.split(',')|join(", ")}} ;
  {%- endif %}
  dsw:createdAt "{{user.createdAt}}"^^xsd:dateTime ;
  dsw:updatedAt "{{user.updatedAt}}"^^xsd:dateTime .



{%- endfor -%}
{%- endif %}